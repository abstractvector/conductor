version: "3.7"

services:

  # core services

  mariadb:
    image: mariadb:latest
    container_name: mariadb
    restart: always
    user: "1000:1000"
    ports:
      - 3306:3306
    volumes:
      - ~/data/mariadb:/var/lib/mysql
    env_file:
      - ~/env/mariadb.env

  mongodb:
    image: mongo:latest
    container_name: mongodb
    restart: always
    user: "1000:1000"
    volumes:
      - ~/data/mongodb:/data/db

  influxdb:
    image: influxdb:latest
    container_name: influxdb
    restart: always
    user: "1000:1000"
    ports:
      - 8086:8086
    volumes:
      - ~/data/influxdb:/var/lib/influxdb

  mosquitto:
    image: eclipse-mosquitto:latest
    container_name: mosquitto
    restart: always
    user: "1000:1000"
    ports:
      - 1883:1883
    volumes:
      - ~/data/mosquitto:/mosquitto/data
      - ~/data/mosquitto.conf:/mosquitto/config/mosquitto.conf

  nginx:
    build: ./nginx
    container_name: nginx
    restart: always
    depends_on:
      - grafana
      - home-assistant
      - jenkins
      - kibana
      - nextcloud
      - node-red
      - prometheus
    volumes:
      - ~/data/nginx/certs:/etc/ssl
    ports:
      - 80:80
      - 443:443

  jobs:
    build:
      context: https://${GITHUB_TOKEN}:@github.com/abstractvector/conductor-jobs.git
      dockerfile: docker/Dockerfile
    container_name: jobs
    restart: always
    volumes:
      - jobs:/var/lib/conductor-jobs/

  # monitoring

  grafana:
    image: grafana/grafana
    container_name: grafana
    restart: always
    user: "1000:1000"
    volumes:
      - ~/data/grafana:/var/lib/grafana
      - ./grafana/grafana.ini:/etc/grafana/grafana.ini

  prometheus:
    image: prom/prometheus
    container_name: prometheus
    restart: always
    volumes:
      - prometheus:/prometheus
    entrypoint:
      - /bin/prometheus
      - --storage.tsdb.path=/prometheus
      - --web.console.libraries=/etc/prometheus/console_libraries
      - --web.console.templates=/etc/prometheus/consoles
      - --web.external-url=https://rv.adventurousway.com/prometheus/
      - --web.route-prefix=/
      - --config.file=/prometheus/prometheus.yml

  cadvisor:
    image: google/cadvisor
    container_name: cadvisor
    restart: always
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:ro
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
      - /dev/disk/:/dev/disk:ro

  # rv automation

  node-red:
    image: nodered/node-red-docker
    container_name: node-red
    restart: always
    user: "1000:1000"
    ports:
      - 10110:10110 # Pepwave MAX BR1 GPS Forwarding
      - 8000:8000/udp # Freematics
    volumes:
      - ~/data/node-red:/data

  home-assistant:
    image: homeassistant/home-assistant
    container_name: home-assistant
    restart: always
    network_mode: host
    ports:
      - "8123:8123"
    devices:
      - "/dev/ttyACM0:/dev/ttyACM0"
    volumes:
      - ~/data/home-assistant:/config
      - /etc/localtime:/etc/localtime:ro

  homebridge:
    image: oznu/homebridge:latest
    container_name: homebridge
    restart: always
    network_mode: host
    environment:
      - TZ=America/Los_Angeles
      - PGID=1000
      - PUID=1000
    volumes:
      - ~/data/homebridge:/homebridge

  deconz:
    image: marthoc/deconz
    container_name: deconz
    network_mode: host
    restart: always
    volumes:
      - ~/data/deconz:/root/.local/share/dresden-elektronik/deCONZ
    devices:
      - /dev/ttyACM1:/dev/ttyACM1
    environment:
      - DECONZ_DEVICE=/dev/ttyACM1
      - DECONZ_WEB_PORT=801
      - DECONZ_WS_PORT=445
      - DECONZ_VNC_PORT=5930
      - DECONZ_VNC_PASSWORD=deconz
      - DECONZ_VNC_MODE=1
      - DEBUG_INFO=1
      - TZ=America/Los_Angeles

  # build tools

  jenkins:
    build: ./jenkins
    container_name: jenkins
    restart: always
    environment:
      - JENKINS_OPTS="--prefix=/jenkins"
    volumes:
      - ~/data/jenkins:/var/jenkins_home
      - /var/run/docker.sock:/var/run/docker.sock
      - /usr/bin/docker:/usr/bin/docker

  nexus:
    image: sonatype/nexus3
    container_name: nexus
    restart: always
    ports:
     - "8081:8081"
    volumes:
      - nexus:/nexus-data

  # elastic (elk) stack

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.3.2
    container_name: elasticsearch
    environment:
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - discovery.type=single-node
    volumes:
      - elasticsearch:/usr/share/elasticsearch/data

  kibana:
    image: docker.elastic.co/kibana/kibana:7.3.2
    container_name: kibana
    environment:
      - SERVER_NAME=rv.adventurousway.com
      - SERVER_BASEPATH=/kibana
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
    depends_on:
      - elasticsearch

  logstash:
    build: ./logstash
    container_name: logstash
    environment:
      - RABBITMQ_HOST=${RABBITMQ_HOST}
      - RABBITMQ_USERNAME=${RABBITMQ_USERNAME}
      - RABBITMQ_PASSWORD=${RABBITMQ_PASSWORD}

volumes:
  prometheus:
    driver: local
    name: prometheus
  jobs:
    driver: local
    name: jobs
  nexus:
    driver: local
    name: nexus
  elasticsearch:
    driver: local
    name: elasticsearch
